<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yRcAAAAASUVORK5CYII=
</value>
  </data>
</root>