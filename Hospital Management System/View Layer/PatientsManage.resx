<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>